#SPDX-License-Identifier: GPL3.0+
---
- name: "Create the project {{ instance_name }}"
  kubernetes.core.k8s:
    name: "{{ instance_name }}"
    api_version: v1
    kind: Namespace
    state: present

- name: "Create the Application to deploy the Hashicorp Vault Server"
  kubernetes.core.k8s:
    state: present
    src: argocd-application-vault.yaml

- name: "Fix the permissions for the service accounts"
  ansible.builtin.shell: "oc adm policy add-scc-to-user anyuid -z {{ instance_name }}"
  loop:
    - "{{ instance_name }}"
    - "{{ instance_name }}-agent-injector"
  loop_control:
    loop_var: _current_sa
    label: "{{ _current_sa }}"

- name: "Get the assigned caBundle"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: MutatingWebhookConfiguration
    name: "{{ instance_name }}-agent-injector-cfg"
  register: _current_object

- name: "Get the definition for the Application {{ instance_name }}"
  kubernetes.core.k8s_info:
    api_version: argoproj.io/v1alpha1
    kind: Application
    name: "{{ instance_name }}"
    namespace: "openshift-gitops"
  register: _current_application

- name: Apply the patch operation to the existing Application
  kubernetes.core.k8s_json_patch:
    api_version: argoproj.io/v1alpha1
    kind: Application
    namespace: "openshift-gitops"
    name: "{{ instance_name }}"
    patch:
      - op: replace
        path: /spec/source/helm/parameters
        value: "{{ _current_params + [{'name': 'injector.certs.caBundle', 'value': _new_ca_bundle}] }}"
  vars:
    _current_params: "{{ (_current_application.resources | first).spec.source.helm.parameters | rejectattr('name', 'equalto', 'injector.certs.caBundle') }}"
    _new_ca_bundle: "{{ ((_current_object.resources | first).webhooks | selectattr('clientConfig.caBundle') | first).clientConfig.caBundle }}"

- name: "Generate an OpenSSH keypair with the default values (4096 bits, rsa)"
  community.crypto.openssh_keypair:
    path: id_ssh_rsa
  register: _generated_ssh_key_file

- name: "Create the secrets into the vault through the pod {{ instance_name }}-0"
  ansible.builtin.shell: "{{ _current_command }}"
  vars:
    _ssh_private_key: "{{ lookup('file', _generated_ssh_key_file.filename) }}"
  loop:
    - "oc exec {{ instance_name }}-0 -- {{ instance_name }} kv put secret/aap/lab username='{{ ssh_key_username }}' ssh_key_data='{{ _ssh_private_key }}'"
  loop_control:
    loop_var: _current_command
    label: "Command {{ loop_index }}"
    index_var: loop_index

...
